/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <driver_base.h>
#include  "gpio_driver.h"
#include "uart_driver.h"
#include "parser.h"
#include "dataHandler.h"
int main(void)
{

	//gpio::init_gpio(GPIOC, 13, MODE_OUTPUT_10MHZ, CNF_OUTPUT_PUSH_PULL);
	//gpio::SetLOW(GPIOC, 13); //PA3 pin inverted, have to set HIGH to turn off




	gpio::init_gpio(GPIOB, 11, MODE_OUTPUT_10MHZ, CNF_OUTPUT_PUSH_PULL);
	gpio::SetLOW(GPIOB, 11);

	//gpio::init_gpio(GPIOC, 13, MODE_OUTPUT_10MHZ, CNF_OUTPUT_PUSH_PULL);
	//gpio::SetHIGH(GPIOC, 13);

	//gpio::init_gpio(GPIOC, 14, MODE_OUTPUT_10MHZ, CNF_OUTPUT_PUSH_PULL);
	//gpio::SetHIGH(GPIOC, 14);

	uart_param_t uart2_config = {
			.uart = UART2,
			.io = GPIOA,
			.tx = 2,
			.rx = 3,
			.tx_ISR_en = UART_ENABLE_INTERRUPT,
			.rx_ISR_en = UART_ENABLE_INTERRUPT,
	};

//	uart_param_t uart3_config = {
//				.uart = UART3,
//				.io = GPIOB,
//				.tx = 10,
//				.rx = 11,
//				.tx_ISR_en = UART_ENABLE_INTERRUPT,
//				.rx_ISR_en = UART_ENABLE_INTERRUPT,
//	};

	//UART uart2(UART2, GPIOA, 2, 3);
	UART uart2(uart2_config, GPIOC, 14);
	//UART uart3(uart3_config, GPIOC, 13);
	DataHandler::messageHandler msg(&uart2);
	SimpleParser parser;
	char ch = 'c';


    while(1)
    {

//    	msg.getMessages();
//    	msg.parseMsg();
//    	msg.printMsgStructure(MSG_BODY);
//    	msg.clearData();
    	uart2.write_string("Hello world\n\r");
    	uart2.write_string("Hello from Adams\n\r");
    	uart2.write_string("Wishing you happy holidays\n\r");
    	for(int i = 0; i < 500000; i++){}







    }
}
